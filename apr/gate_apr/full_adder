`timescale 1ns / 1ns


`timescale 1ns / 1ns


`timescale 1ns / 1ns
module xor_ ( xor_out, A, B );

output  xor_out;

input  A, B;


specify 
    specparam CDS_LIBNAME  = "fft";
    specparam CDS_CELLNAME = "xor";
    specparam CDS_VIEWNAME = "schematic";
endspecify

NAND2X1 I2 ( .Y(net8), .A(A), .B(net10));
NAND2X1 I1 ( .Y(xor_out), .A(net9), .B(net8));
NAND2X1 I0 ( .Y(net9), .A(net07), .B(B));
INVX1 I6 ( .Y(net10), .A(B));
INVX1 I5 ( .Y(net07), .A(A));

endmodule


`timescale 1ns / 1ns
module full_adder ( cout, sum, A, B, cin );

output  cout, sum;

input  A, B, cin;


specify 
    specparam CDS_LIBNAME  = "fft";
    specparam CDS_CELLNAME = "full_adder";
    specparam CDS_VIEWNAME = "schematic";
endspecify

xor_ I1 ( .xor_out(sum), .A(net13), .B(cin));
xor_ I0 ( .xor_out(net13), .A(A), .B(B));
NAND2X1 I4 ( .Y(cout), .A(net18), .B(net17));
NAND2X1 I3 ( .Y(net17), .A(A), .B(B));
NAND2X1 I2 ( .Y(net18), .A(cin), .B(net13));

endmodule


